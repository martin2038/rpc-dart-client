/// GENERATED BY BT RPC GEN - LESS MODIFY BY HAND
/// demo_java_server_dto.dart 2022-01-14T17:06:44+08:00

import 'package:json_annotation/json_annotation.dart';
import 'package:btrpc/btrpc.dart';

part 'demo_java_server_dto.g.dart';

const APP_NAME = 'demo-java-server';

@JsonSerializable(explicitToJson: true)
class Img {
  /// 新增为null， 编辑不可空
  /// Size{min=1, max=2147483647}
  String? id;

  /// 为null表示删除掉,最大100kb
  /// Size{min=1024, max=102400}
  @JsonKey(fromJson: BaseService.jsonToU8, toJson: BaseService.u8ToJson)
  Uint8List? img;

  Img();

  factory Img.fromJson(Map<String, dynamic> json) => _$ImgFromJson(json);

  Map<String, dynamic> toJson() => _$ImgToJson(this);
}

@JsonSerializable(explicitToJson: true)
class User {
  int? id;

  String? name;

  UserStatus? stat;

  User();

  factory User.fromJson(Map<String, dynamic> json) => _$UserFromJson(json);

  Map<String, dynamic> toJson() => _$UserToJson(this);
}

///  [Response]
@JsonSerializable(explicitToJson: true, genericArgumentFactories: true)
class PagedList<DTO> {
  int? count;

  List<DTO>? data;

  String? lastKey;

  PagedList();

  factory PagedList.fromJson(
          Map<String, dynamic> json, DTO Function(Object? json) fromJsonT) =>
      _$PagedListFromJson(json, fromJsonT);

  Map<String, dynamic> toJson(Object Function(DTO value) toJsonT) =>
      _$PagedListToJson(this, toJsonT);
}

/// 用户状态枚举值
enum UserStatus { NORMAL, BLOCKED, VIP }

@JsonSerializable(explicitToJson: true, genericArgumentFactories: true)
class PagedQuery<Query> {
  /// Min{value=1}
  int? page;

  /// NotNull{}
  /// Min{value=1}
  /// Max{value=100}
  final int pageSize;

  /// Valid{}
  Query? q;

  PagedQuery(this.pageSize);

  factory PagedQuery.fromJson(
          Map<String, dynamic> json, Query Function(Object? json) fromJsonT) =>
      _$PagedQueryFromJson(json, fromJsonT);

  Map<String, dynamic> toJson(Object Function(Query value) toJsonT) =>
      _$PagedQueryToJson(this, toJsonT);
}

/// 测试请求
@JsonSerializable(explicitToJson: true)
class TimeReq {
  /// 姓名
  /// NotBlank{}
  /// Size{min=0, max=10, message=name's length too long than 10}
  final String name;

  /// 年龄
  /// NotNull{}
  /// Min{value=1}
  /// Max{value=80}
  final int age;

  String? test;

  List<int>? test1;

  List<User>? test2;

  TimeReq(this.name, this.age);

  factory TimeReq.fromJson(Map<String, dynamic> json) =>
      _$TimeReqFromJson(json);

  Map<String, dynamic> toJson() => _$TimeReqToJson(this);
}

///  [Response]
@JsonSerializable(explicitToJson: true)
class TimeResult {
  String? time;

  /// NotNull{}
  final int timestamp;

  /// 会被序列化为毫秒时间戳
  int? date;

  TimeResult(this.timestamp);

  factory TimeResult.fromJson(Map<String, dynamic> json) =>
      _$TimeResultFromJson(json);

  Map<String, dynamic> toJson() => _$TimeResultToJson(this);
}
